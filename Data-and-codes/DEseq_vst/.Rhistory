data_m_sd_mean <- data_m %>% group_by(gene) %>% dplyr::summarise(sd=sd(value), value=mean(value))
data_m_sd_mean <- as.data.frame(data_m_sd_mean)
data_m_sd_mean
#使用geom_errorbar添加误差线
p <- ggplot(data_m_sd_mean, aes(x=gene, y=value)) +
geom_bar(stat="identity") +
geom_errorbar(aes(ymin=value-sd, ymax=value+sd))
p
# 设置误差线的宽度和位置
p <- ggplot(data_m_sd_mean, aes(x=gene, y=value)) +
geom_bar(stat="identity", aes(fill=gene)) +
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=0.2, position=position_dodge(width=0.75))
p
#每个基因的原始表达值堆积柱状图 (只需要修改positon=stack)
# position="fill" 展示的是堆积柱状图各部分的相对比例
# position="stack" 展示的是堆积柱状图的原始值
p <- ggplot(data_m, aes(x=variable, y=value)) +
geom_bar(stat="identity", position="stack", aes(fill=gene)) +
geom_text(aes(label=value), position=position_stack(vjust=0.5))
p
# position="fill" 展示的是堆积柱状图各部分的相对比例
# position="stack" 展示的是堆积柱状图的原始值
p <- ggplot(data_m, aes(x=variable, y=value, group=gene)) +
geom_bar(stat="identity", position="stack", aes(fill=gene)) +
geom_text(aes(label=value), position=position_stack(vjust=0.5))
p
#比较每组各个基因的相对表达 (position=fill)
# position="fill" 展示的是堆积柱状图各部分的相对比例
# position="stack" 展示的是堆积柱状图的原始值，可以自己体现下看卡差别
p <- ggplot(data_m, aes(x=variable, y=value)) +
geom_bar(stat="identity", position="fill", aes(fill=gene))
p
# 纵轴的显示改为百分比
p <- ggplot(data_m, aes(x=variable, y=value)) +
geom_bar(stat="identity", position="fill", aes(fill=gene)) +
scale_y_continuous(labels = scales::percent)
p
# 在柱子中标记百分比值
# 首先计算百分比，同样是group_by (按照给定的变量分组，然后按组操作)和mutate两个函数(在当前数据表增加新变量)
# group_by: 按照给定的变量分组，然后按组操作
# mutate: 在当前数据表增加新变量
# 第一步增加每个组的加和，第二步计算比例
data_m <- data_m %>% group_by(variable) %>% mutate(count=sum(value)) %>%
mutate(freq=round(100*value/count,2))
# 再标记相对比例信息
p <- ggplot(data_m, aes(x=variable, y=value, group=gene)) +
geom_bar(stat="identity", position="fill", aes(fill=gene)) +
scale_y_continuous(labels = scales::percent) +
geom_text(aes(label=freq), position=position_fill(vjust=0.5))
p
View(a)
rownames <- c("ab","bba","f")
rownames <- c("ab","bba","f")
colnames <- c("up","down")
?matrix
b <- c(22,23,15,27,17,40)
d <- matrix(data = b,nrow = 3,ncol = 2)
View(d)
rownames(d) <- rownames
colnames(d) <- colnames
View(d)
# 条形图
##分组条形图
status <- c("poor","improved","excellent","general","worse")
library(vcd)
number <- matrix(c(drugA,drugB),5,2)
name <- c("drugA","drugB")
collist <- c("gray", "gold3", "firebrick", "darkorange3", "tan1")
dose <- c(20,30,40,50,60)
drugA <- c(16,20,27,40,60)
drugB <- c(17,20,30,45,50)
status <- c("poor","improved","excellent","general","worse")
library(vcd)
number <- matrix(c(drugA,drugB),5,2)
name <- c("drugA","drugB")
collist <- c("gray", "gold3", "firebrick", "darkorange3", "tan1")
barplot(number,main = "drugA vs drugB patient status"
,xlab = "drug type",ylab = "number", names.arg = name,
col = collist,beside = TRUE)
##堆砌条形图
barplot(number,main = "drugA vs drugB patient status"
,xlab = "drug type",ylab = "number", names.arg = name,
col = collist)
barplot(number,main = "drugA vs drugB patient status"
,xlab = "drug type",ylab = "number", names.arg = name,
col = collist,beside = TRUE)
number2 <- matrix(c(drugA,drugB),2,5)
spineplot(number2,main = "drugA vs drugB patient status",xaxlabels = name
,yaxlabels = status)
View(d)
# 将KM酵母RNAseq数据经过FPKM处理；
rm(list = ls())
setwd("/Users/xufeng/Desktop/others/AS_Kluyveromyces/k_f_fpkm/")
b <- read.table(file = "all.idKIM1.txt",sep = "\t",header = T)
setwd("/Users/xufeng/Desktop/others/reference/gff")
setwd("/Users/xufeng/Desktop/others/AS_Kluyveromyces/")
b <- read.table(file = "all.idKIM1.txt",sep = "\t",header = T)
setwd("/Users/xufeng/Desktop/others/AS_Kluyveromyces/countdata1/")
b <- read.table(file = "all.idKIM1.txt",sep = "\t",header = T)
setwd("/Users/xufeng/Desktop/others/AS_Kluyveromyces/countdata2/")
b <- read.table(file = "all.idKIM1.txt",sep = "\t",header = T)
rownames(b)<-b[,1]
b<-b[,-1]
kb <- b$Length / 1000
kb
countdata <- b[,6:ncol(b)]
rpk <- countdata / kb
rpk
fpkm <- t(t(rpk)/colSums(countdata) * 10^6)
k_f_fpkm <- fpkm[,c(1,2,15,12,13,14)]
all_fpkm <- fpkm[,c(1,2,15,16,17,3,4,5,18,6,7,8,9,10,11,19,20,21,12,13,14)]
colnames(k_f_fpkm) <- c("k_1","k_2","k_3","f_1","f_2","f_3")
colnames(all_fpkm) <- c("k_1","k_2","k_3","aa-1","aa-2","aa-3","bb_2","bb_3","bb_1",
"ab_1","ab_2","ab_3","bba_1","bba_2","bba_3","aab_1","aab_2",
"aab_3","f_1","f_2","f_3")
write.csv(k_f_fpkm,file="k_f_fpkm.csv")
write.csv(all_fpkm,file="all_fpkm.csv")
# ID转换：
setwd("/Users/xufeng/Desktop/others/reference/gff")
setwd("/Users/xufeng/Desktop/others/reference/gff")
a <- read.table("KM_Y179_gff_final.GFF3",header = F,sep = "\t",quote ="")
library(stringr)
k <- which(a[,3]=="gene", arr.ind = TRUE)
k2 <- which(a[,3]=="exon", arr.ind = TRUE)
k3 <- k+2
d <- intersect(k2,k3)
gene <- a[k,]
exon <- a[k3,]
gene <- str_split(gene[,9],";",simplify = T)
gene <- gene[,2]
gene <- str_split(gene,"=",simplify = T)[,2]
gene <- as.data.frame(gene)
id <- str_split(exon[,9],";",simplify = T)
id <- id[,1]
id <- str_split(id,"=",simplify = T)[,2]
id <- as.data.frame(id)
ids <- cbind(id,gene)
table(rownames(all_fpkm) %in% ids[,1])
exprSet=all_fpkm[rownames(all_fpkm) %in% ids[,1],]
tmp = by(exprSet,
ids[,2],
function(x) rownames(x)[which.max(rowMeans(x))])
probe <- as.character(tmp)
exprSet=exprSet[rownames(exprSet) %in% probe ,]
ids = ids[match(rownames(exprSet),ids[,1]),]
rownames(exprSet) <- ids[match(rownames(exprSet),ids[,1]),2]
all_fpkm <- exprSet
View(all_fpkm)
save(all_fpkm,file = "all_fpkm.Rdata")
write.csv(all_fpkm,file = "all_fpkm.csv")
View(a)
View(all_fpkm)
setwd("/Users/xufeng/Desktop/k_f_Sce/")
all_fpkm <- read.csv(file = "all_fpkm.csv")
rm(list = ls())
all_fpkm <- read.csv(file = "all_fpkm.csv")
View(all_fpkm)
all_fpkm <- read.csv(file = "all_fpkm.csv",row.names = T,header = T)
View(all_fpkm)
rownames(all_fpkm) <- all_fpkm[,1]
all_fpkm <- all_fpkm[,-1]
View(all_fpkm)
?toupper
x <- "MiXeD cAsE 123"
chartr("iXs", "why", x)
chartr("a-cX", "D-Fw", x)
tolower(x)
toupper(x)
toupper(rownames(all_fpkm))
rownames(all_fpkm) <- toupper(rownames(all_fpkm))
setwd("/Users/xufeng/Desktop/others/reference/gff")
a <- read.table("KM_Y179_gff_final.GFF3",header = F,sep = "\t",quote ="")
library(stringr)
k <- which(a[,3]=="gene", arr.ind = TRUE)
k2 <- which(a[,3]=="exon", arr.ind = TRUE)
k3 <- k+2
d <- intersect(k2,k3)
gene <- a[k,]
exon <- a[k3,]
gene <- str_split(gene[,9],";",simplify = T)
gene <- gene[,2]
gene <- str_split(gene,"=",simplify = T)[,2]
gene <- as.data.frame(gene)
id <- str_split(exon[,9],";",simplify = T)
id <- id[,1]
id <- str_split(id,"=",simplify = T)[,2]
id <- as.data.frame(id)
ids <- cbind(id,gene)
table(rownames(all_fpkm) %in% ids[,1])
exprSet=all_fpkm[rownames(all_fpkm) %in% ids[,1],]
setwd("/Users/xufeng/Desktop/others/reference/gff")
rm(list = ls())
a <- read.table("KM_Y179_gff_final.GFF3",header = F,sep = "\t",quote ="")
library(stringr)
k <- which(a[,3]=="gene", arr.ind = TRUE)
k2 <- which(a[,3]=="exon", arr.ind = TRUE)
k3 <- k+2
d <- intersect(k2,k3)
gene <- a[k,]
exon <- a[k3,]
gene <- str_split(gene[,9],";",simplify = T)
gene <- gene[,2]
gene <- str_split(gene,"=",simplify = T)[,2]
gene <- as.data.frame(gene)
id <- str_split(exon[,9],";",simplify = T)
id <- id[,1]
id <- str_split(id,"=",simplify = T)[,2]
id <- as.data.frame(id)
ids <- cbind(id,gene)
table(rownames(all_fpkm) %in% ids[,1])
exprSet=all_fpkm[rownames(all_fpkm) %in% ids[,1],]
all_fpkm <- read.csv(file = "/Users/xufeng/Desktop/others/AS_Kluyveromyces/countdata2/all_fpkm.csv")
table(rownames(all_fpkm) %in% ids[,1])
View(all_fpkm)
rownames(all_fpkm) <- all_fpkm[,1]
all_fpkm <- all_fpkm[,-1]
table(rownames(all_fpkm) %in% ids[,1])
exprSet=all_fpkm[rownames(all_fpkm) %in% ids[,1],]
View(ids)
ids[,2] <- toupper(ids[,2])
tmp = by(exprSet,
ids[,2],
function(x) rownames(x)[which.max(rowMeans(x))])
probe <- as.character(tmp)
exprSet=exprSet[rownames(exprSet) %in% probe ,]
ids = ids[match(rownames(exprSet),ids[,1]),]
rownames(exprSet) <- ids[match(rownames(exprSet),ids[,1]),2]
all_fpkm <- exprSet
save(all_fpkm,file = "all_fpkm_nosmall.Rdata")
setwd("/Users/xufeng/Desktop/k_f_Sce/")
write.csv(all_fpkm,file = "all_fpkm_nosmall.csv")
all_fpkm <- read.csv(file = "all_fpkm_nosmall.csv",header = T)
View(all_fpkm)
all_fpkm <- load(file = "all_fpkm_nosmall.Rdata")
all_fpkm <- load(file = "all_fpkm_nosmall.Rdata")
load("/Users/xufeng/Desktop/k_f_Sce/all_fpkm_nosmall.Rdata")
sce <- read.table(file = "GSE53720_FPKM_NR_CR.txt",sep = "\t",header = T)
rownames(sce)<-sce[,1]
sce<-sce[,-1]
all_fpkm_jec <- all_fpkm[rownames(all_fpkm) %in% rownames(sce),]
View(all_fpkm_jec)
View(all_fpkm_jec)
rm(list = ls())
setwd("/Users/xufeng/Desktop/lvhong")
a <- read.csv(file = "对比(1).csv",header = F)
library(ggplot2)
View(a)
?geom_bar
mpg4 <- subset(mpg, manufacturer %in% c("audi", "volkswagen", "jeep"))
View(mpg4)
mpg4$manufacturer <- as.character(mpg4$manufacturer)
mpg4$model <- as.character(mpg4$model)
View(mpg4)
base <- ggplot(mpg4, aes(fill = model))
+ geom_bar(position = "dodge")
+ opts(legend.position = "none")
base <- ggplot(mpg4, aes(fill = model)) + geom_bar(position = "dodge") + opts(legend.position = "none")
?opts
??opts
View(a)
ab <- a[,1:7]
bba <- a[,8:14]
f <- a[,15:21]
View(a)
View(ab)
colnames(a) <- a[1,]
View(a)
colnames(ab) <- ab[1,]
View(ab)
ab[1,]
ab[,1]
d <- ab[1,]
View(d)
colnames(ab) <- d
View(ab)
View(d)
d <- ab[2,]
View(d)
d <- as.vector(ab[1,])
View(d)
colnames(ab) <- d
View(ab)
ab <- read.table(ab,header = T)
View(ab)
ab <- ab[,c(1,5,6)]
bba <- bba[,c(1,5,6)]
f <- f[,c(1,5,6)]
View(ab)
colnames(ab) <- c("ID","Up","Down")
colnames(bba) <- c("ID","Up","Down")
colnames(f) <- c("ID","Up","Down")
ab <- ab[-1,]
bba <- bba[-1,]
f <- f[-1,]
View(ab)
View(mpg4)
View(a)
View(mpg4)
intersect(rownames(ab),rownames(bba),rownames(f))
View(f)
intersect(ab$ID,bba$ID,f$ID)
View(f)
f$ID
intersect(ab$ID,bba$ID)
?intersect
intersect(intersect(ab$ID,bba$ID),f$ID)
ab <- ab[intersect(intersect(ab$ID,bba$ID),f$ID),]
bba <- bba[intersect(intersect(ab$ID,bba$ID),f$ID),]
f <- f[intersect(intersect(ab$ID,bba$ID),f$ID),]
View(ab)
ab <- a[,1:7]
ab <- ab[,c(1,5,6)]
colnames(ab) <- c("ID","Up","Down")
ab <- ab[-1,]
bba <- a[,8:14]
bba <- bba[,c(1,5,6)]
colnames(bba) <- c("ID","Up","Down")
bba <- bba[-1,]
f <- a[,15:21]
f <- f[,c(1,5,6)]
colnames(f) <- c("ID","Up","Down")
f <- f[-1,]
View(ab)
rownames(ab) <- ab[,1]
rownames(bba) <- bba[,1]
rownames(f) <- f[,1]
View(a)
View(ab)
View(ab)
ab <- ab[c(-74,-75),]
View(bba)
View(f)
ab <- ab[c(-74,-75),]
bba <- bba[c(-73,-74,-75),]
rownames(ab) <- ab[,1]
rownames(bba) <- bba[,1]
rownames(f) <- f[,1]
ab <- ab[intersect(intersect(ab$ID,bba$ID),f$ID),]
View(ab)
bba <- bba[intersect(intersect(ab$ID,bba$ID),f$ID),]
f <- f[intersect(intersect(ab$ID,bba$ID),f$ID),]
getwd()
View(ab)
rownames(ab) <- NULL
rownames(bba) <- NULL
rownames(f) <- NULL
View(ab)
all <- rbind(ab,bba,f)
View(all)
all$Group <- c(rep("ab",67),rep("bba",67),rep("f",67))
View(all)
all <- order(all$ID)
all <- rbind(ab,bba,f)
all$Group <- c(rep("ab",67),rep("bba",67),rep("f",67))
all <- all[order(all$ID),]
View(all)
View(all)
base <- ggplot(all, aes(fill = ID)) + geom_bar(position = "stick")
base <- ggplot(all, aes(fill = ID)) + geom_bar(position = "stack")
View(base)
base <- ggplot(all, aes(x=pathway,y=count,fill = ID)) + geom_bar(position = "stack")
base
base <- ggplot(all, aes(fill = ID)) + geom_bar(position = "stack")
base
base <- ggplot(all, aes(x="pathway",fill = ID)) + geom_bar(position = "stack")
base
base <- ggplot(all, aes(x=ID,fill = Group)) + geom_bar(position = "stack")
base
base <- ggplot(all, aes(x=ID,fill = Group)) + geom_bar(position = "dodge")
base
base <- ggplot(all, aes(x=ID,y=up,fill = Group)) + geom_bar(position = "dodge")
base
base <- ggplot(all, aes(x=ID,y=Up,fill = Group)) + geom_bar(position = "dodge")
base
View(all)
library(tidyr)
library(dplyr)
all_long <- gather(ID,Group,Up:Down)
all_long <- gather(all,ID,Group,Up:Down)
View(all_long)
View(all_long)
all_long <- gather(all,Regulate,Count,Up:Down)
View(all_long)
p <- ggplot(data,aes(fill = all_long,y = Count,x=Group)) +
geom_bar(position="fill", stat="identity")
p <- ggplot(all_long,aes(fill = all_long,y = Count,x=Group)) +
geom_bar(position="fill", stat="identity")
p
p <- ggplot(all_long,aes(fill = all_long,y = Count, x=ID)) +
geom_bar(position="fill", stat="identity")
p
p <- ggplot(all_long,aes(fill = regulate,y = Count, x=ID)) +
geom_bar(position="fill", stat="identity")
p
p <- ggplot(all_long,aes(fill = Regulate,y = Count, x=ID)) +
geom_bar(position="fill", stat="identity")
p
p <- ggplot(all_long,aes(fill = Regulate,y = Count, x=Group)) +
geom_bar(position="fill", stat="identity")
p
p <- ggplot(all_long,aes(fill = Regulate,y = Count, x= ID)) +
geom_bar(position="fill", stat="identity")
p
View(all_long)
p <- ggplot(all_long,aes(fill = Regulate, y = Count, x= ID)) +
geom_bar(position="stack", stat="identity")
p
all_long <- all_long[1:6,]
p <- ggplot(all_long,aes(fill = Regulate, y = Count, x= ID)) +
geom_bar(position="stack", stat="identity")
p
all_long <- gather(all,Regulate,Count,Up:Down)
all_long1 <- all_long[c(1:6,202:207),]
p <- ggplot(all_long,aes(fill = Regulate, y = Count, x= ID)) +
geom_bar(position="stack", stat="identity")
p
p <- ggplot(all_long1,aes(fill = Regulate, y = Count, x= ID)) +
geom_bar(position="stack", stat="identity")
p
View(all_long)
View(all_long1)
View(all)
write.csv(all,file = "all.csv")
getwd()
library("clusterProfiler")
library("pathview")
library("org.Sc.sgd.db")
setwd("/Users/xufeng/Desktop/others/Kluyveromyces/countdata2/DEseq_vst")
deg_file<-("./k_f__DEseq_DEG.csv")
degs <-  read.csv(deg_file)
rownames(degs) <- degs[,1]
degs <- degs[,c(-1,-2)]
degs_ordered <- degs[order(degs[,2]),]
rm(list = ls())
setwd("/Users/xufeng/Desktop/others/Kluyveromyces/countdata2/DEseq_vst")
deg_file<-("./k_f__DEseq_DEG.csv")
degs <-  read.csv(deg_file)
rownames(degs) <- degs[,1]
degs <- degs[,c(-1,-2)]
degs_ordered <- degs[order(degs[,2]),]
DEG_list <- rownames(degs[degs[,"regulate"] != "Normal",])
head(DEG_list)
write.table(DEG_list,file = "k_f_all_DEG.csv",row.names = F)
gene_ids <- bitr(DEG_list, fromType="GENENAME", toType=c("ENTREZID","ENSEMBL"),
OrgDb="org.Sc.sgd.db")
kegg <- enrichKEGG(
gene = gene_ids[,3],
organism = "sce",
keyType = "kegg",
pvalueCutoff = 0.05,
pAdjustMethod = "BH",
minGSSize = 10,
maxGSSize = 500,
qvalueCutoff = 0.2,
use_internal_data = T
)
a <- kegg@result
kegg@result[["Description"]] <- gsub(","," ",kegg@result[["Description"]])
write.table(kegg@result, file = "k_f_KEGG_all_enrichment_stat.csv",sep=",",row.names =F, quote = F)
deg_info <- degs['log2FoldChange']
deg_info['GENENAME'] <- rownames(deg_info)
gene_ids_merge <- merge(gene_ids, deg_info,by='GENENAME')
index<-duplicated(gene_ids_merge$ENTREZID)
gene_ids_merge<-gene_ids_merge[!index,]
map_ids <- as.matrix(gene_ids_merge['log2FoldChange'])
rownames(map_ids) <- gene_ids_merge$ENTREZID
View(kegg)
View(a)
View(map_ids)
View(gene_ids)
View(map_ids)
View(map_ids)
map_ids["855630",]
kegg <- enrichKEGG(
gene = gene_ids[,3],
organism = "sce",
keyType = "kegg",
pvalueCutoff = 1,
pAdjustMethod = "BH",
minGSSize = 10,
maxGSSize = 500,
qvalueCutoff = 1,
use_internal_data = T
)
View(a)
a <- kegg@result
View(a)
View(gene_ids)
kegg <- enrichKEGG(
gene = gene_ids[,2],
organism = "sce",
keyType = "kegg",
pvalueCutoff = 0.05,
pAdjustMethod = "BH",
minGSSize = 10,
maxGSSize = 500,
qvalueCutoff = 0.2,
use_internal_data = T
)
kegg <- enrichKEGG(
gene = gene_ids[,3],
organism = "sce",
keyType = "kegg",
pvalueCutoff = 0.05,
pAdjustMethod = "BH",
minGSSize = 10,
maxGSSize = 500,
qvalueCutoff = 0.2,
use_internal_data = T
)
View(gene_ids)
table(gene_ids$ENSEMBL)
