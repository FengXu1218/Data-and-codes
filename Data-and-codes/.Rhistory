bba_s <- cbind(bba,sce)
f_s <- cbind(f,sce)
# limma包对三组四组数据进行差异分析：
library(ggpubr)
library(stringr)
library(gplots)
library(limma)
library(edgeR)
group_list <- factor(c(rep("trt",3),rep("utrt",4)))
exprSet <- ab_s
design <- model.matrix(~0+factor(group_list))
colnames(design)=levels(factor(group_list))
rownames(design)=colnames(exprSet)
dge <- DGEList(counts=exprSet)
logCPM <- cpm(dge, log=TRUE, prior.count=3)
v <- voom(dge,design,plot=TRUE, normalize="quantile")
fit <- lmFit(v, design)
group_list
cont.matrix=makeContrasts(contrasts=c("utrt-trt"),levels = design)
fit2=contrasts.fit(fit,cont.matrix)
fit2=eBayes(fit2)
tempOutput = topTable(fit2, coef="utrt-trt", n=Inf)
DEG_limma_voom = na.omit(tempOutput)
nrDEG <- DEG_limma_voom
View(bba_s)
View(nrDEG)
nrDEG <- nrDEG[order(nrDEG$adj.P.Val),]
View(nrDEG)
head(nrDEG)
library(pheatmap)
choose_gene=head(rownames(nrDEG),100) ## 50 maybe better
choose_matrix= exprSet[choose_gene,]
choose_matrix=t(scale(t(choose_matrix)))
choose_matrix=na.omit(choose_matrix)
#输出的热图的储存路径
# group_list=as.factor(c(rep("k",3),rep("aa",3)))
# plot_color = c('orange','green')[group_list]
pdf(file = "ab_s_DEG_heatmap.pdf",width=60,height=90)
par(oma=c(10,3,3,7))
heatmapMat=choose_matrix
heatmap.2(heatmapMat,col='greenred',trace="none",
cexRow = 3, cexCol = 2 ,   # 行列名字体大小
srtCol = 45, offsetCol = -0.5
#ColSideColors = plot_color
)# 还是color ) # 调整列名的字体倾斜45度，距离热图的距离缩小
dev.off()
group_list <- factor(c(rep("trt",3),rep("utrt",4)))
exprSet <- bba_s
design <- model.matrix(~0+factor(group_list))
colnames(design)=levels(factor(group_list))
rownames(design)=colnames(exprSet)
dge <- DGEList(counts=exprSet)
logCPM <- cpm(dge, log=TRUE, prior.count=3)
v <- voom(dge,design,plot=TRUE, normalize="quantile")
fit <- lmFit(v, design)
group_list
cont.matrix=makeContrasts(contrasts=c("utrt-trt"),levels = design)
fit2=contrasts.fit(fit,cont.matrix)
fit2=eBayes(fit2)
tempOutput = topTable(fit2, coef="utrt-trt", n=Inf)
DEG_limma_voom = na.omit(tempOutput)
nrDEG <- DEG_limma_voom
nrDEG$row <- rownames(nrDEG)
nrDEG <- nrDEG[order(nrDEG$adj.P.Val),]
head(nrDEG)
library(pheatmap)
choose_gene=head(rownames(nrDEG),100) ## 50 maybe better
choose_matrix= exprSet[choose_gene,]
choose_matrix=t(scale(t(choose_matrix)))
choose_matrix=na.omit(choose_matrix)
#输出的热图的储存路径
# group_list=as.factor(c(rep("k",3),rep("aa",3)))
# plot_color = c('orange','green')[group_list]
pdf(file = "bba_s_DEG_heatmap.pdf",width=60,height=90)
par(oma=c(10,3,3,7))
heatmapMat=choose_matrix
heatmap.2(heatmapMat,col='greenred',trace="none",
cexRow = 3, cexCol = 2 ,   # 行列名字体大小
srtCol = 45, offsetCol = -0.5
#ColSideColors = plot_color
)# 还是color ) # 调整列名的字体倾斜45度，距离热图的距离缩小
dev.off()
group_list <- factor(c(rep("trt",3),rep("utrt",4)))
exprSet <- k_s
design <- model.matrix(~0+factor(group_list))
colnames(design)=levels(factor(group_list))
rownames(design)=colnames(exprSet)
dge <- DGEList(counts=exprSet)
logCPM <- cpm(dge, log=TRUE, prior.count=3)
v <- voom(dge,design,plot=TRUE, normalize="quantile")
fit <- lmFit(v, design)
group_list
cont.matrix=makeContrasts(contrasts=c("utrt-trt"),levels = design)
fit2=contrasts.fit(fit,cont.matrix)
fit2=eBayes(fit2)
tempOutput = topTable(fit2, coef="utrt-trt", n=Inf)
DEG_limma_voom = na.omit(tempOutput)
nrDEG <- DEG_limma_voom
nrDEG$row <- rownames(nrDEG)
nrDEG <- nrDEG[order(nrDEG$adj.P.Val),]
head(nrDEG)
library(pheatmap)
choose_gene=head(rownames(nrDEG),100) ## 50 maybe better
choose_matrix= exprSet[choose_gene,]
choose_matrix=t(scale(t(choose_matrix)))
choose_matrix=na.omit(choose_matrix)
#输出的热图的储存路径
# group_list=as.factor(c(rep("k",3),rep("aa",3)))
# plot_color = c('orange','green')[group_list]
pdf(file = "k_s_DEG_heatmap.pdf",width=60,height=90)
par(oma=c(10,3,3,7))
heatmapMat=choose_matrix
heatmap.2(heatmapMat,col='greenred',trace="none",
cexRow = 3, cexCol = 2 ,   # 行列名字体大小
srtCol = 45, offsetCol = -0.5
#ColSideColors = plot_color
)# 还是color ) # 调整列名的字体倾斜45度，距离热图的距离缩小
dev.off()
group_list <- factor(c(rep("trt",3),rep("utrt",4)))
exprSet <- f_s
design <- model.matrix(~0+factor(group_list))
colnames(design)=levels(factor(group_list))
rownames(design)=colnames(exprSet)
dge <- DGEList(counts=exprSet)
logCPM <- cpm(dge, log=TRUE, prior.count=3)
v <- voom(dge,design,plot=TRUE, normalize="quantile")
fit <- lmFit(v, design)
group_list
cont.matrix=makeContrasts(contrasts=c("utrt-trt"),levels = design)
fit2=contrasts.fit(fit,cont.matrix)
fit2=eBayes(fit2)
tempOutput = topTable(fit2, coef="utrt-trt", n=Inf)
DEG_limma_voom = na.omit(tempOutput)
nrDEG <- DEG_limma_voom
nrDEG$row <- rownames(nrDEG)
nrDEG <- nrDEG[order(nrDEG$adj.P.Val),]
head(nrDEG)
library(pheatmap)
choose_gene=head(rownames(nrDEG),100) ## 50 maybe better
choose_matrix= exprSet[choose_gene,]
choose_matrix=t(scale(t(choose_matrix)))
choose_matrix=na.omit(choose_matrix)
#输出的热图的储存路径
# group_list=as.factor(c(rep("k",3),rep("aa",3)))
# plot_color = c('orange','green')[group_list]
pdf(file = "f_s_DEG_heatmap.pdf",width=60,height=90)
par(oma=c(10,3,3,7))
heatmapMat=choose_matrix
heatmap.2(heatmapMat,col='greenred',trace="none",
cexRow = 3, cexCol = 2 ,   # 行列名字体大小
srtCol = 45, offsetCol = -0.5
#ColSideColors = plot_color
)# 还是color ) # 调整列名的字体倾斜45度，距离热图的距离缩小
dev.off()
getwd()
setwd(../)
setwd(""/Users/xufeng/Desktop")
""
setwd("/Users/xufeng/Desktop")
ls
# ggplot2学习：
rm(list = ls())
library(ggplot2)
#################################################################################################
# ggplot2学习：
# 最简单的函数：qplot()
data <- diamonds
qplot(carat,price,data = diamonds)
dsmall <- diamonds[sample(nrow(diamonds),100),] # 数据太多，随机选取100行；
qplot(carat,price,data = dsmall,shape = cut,colour = color) # colour参数可以调整指定变量不同数
View(data)
# point表示散点图，smooth表示绘制拟合曲线，周围的灰色带为误差；
qplot(carat,price,data = dsmall,geom = c("point","smooth"),span = 0.2)
# 绘制线性回归图像；
qplot(carat,price,data = dsmall,geom = c("point","smooth"))
# histogram and density;
qplot(carat,data = diamonds,geom = "histogram",colour = color,fill = color)
# histogram and density;
qplot(carat,data = diamonds,geom = "histogram",colour = color,fill = color,binwidth = 0.3)
# histogram and density;
qplot(carat,data = diamonds,geom = "histogram",colour = color,fill = color,binwidth = 0.1)
# histogram and density;
qplot(carat,data = diamonds,geom = "histogram",colour = color,fill = color,binwidth = 0.1,xlim=c(0,3))
# histogram and density;
qplot(carat,data = diamonds,geom = "histogram",colour = color,fill = color,binwidth = 0.1,xlim=c(0,4))
# bar and line;
qplot(color,data = diamonds,geom = "bar",fill = color)
qplot(date,unemploy/pop,data = economics,geom = "line")
data <- economics
View(data)
qplot(date,unemploy/pop,data = economics,geom = "line",colour = "green")
qplot(date,unemploy/pop,data = economics,geom = "line",colour = "red")
qplot(date,unemploy/pop,data = economics,geom = "line")+geom_line(outlier.colour = "red",
outlier.size = 2,
fill = "blue",
colour = "green",
size = 1)
qplot(date,unemploy/pop,data = economics,geom = "line")+geom_line(fill = "blue",colour = "green")
qplot(date,unemploy/pop,data = economics,geom = "line")+geom_line(colour = "green")
# facets参数——分组：
qplot(carat,data = diamonds,geom = "histogram",facets = color )
# facets参数——分组：
qplot(carat,data = diamonds,geom = "histogram",facets = color~ )
# facets参数——分组：
qplot(carat,data = diamonds,geom = "histogram",facets = color ~ .)
# facets参数——分组：
qplot(carat,data = diamonds,geom = "histogram",facets = color ~ .,binwidth = 0.1,xlim = c(0,3))
# xlab和ylab参数设置横纵坐标的标题；
qplot(carat,data = diamonds,geom = "histogram",
xlab = "Weight(carats)",ylab = "Count"
facets = color ~ .,binwidth = 0.1,xlim = c(0,3))
# xlab和ylab参数设置横纵坐标的标题；
qplot(carat,data = diamonds,geom = "histogram",
xlab = "Weight(carats)",ylab = "Count",
facets = color ~ .,binwidth = 0.1,xlim = c(0,3))
# xlab和ylab参数设置横纵坐标的标题；main参数设置总标题；
qplot(carat,data = diamonds,geom = "histogram",
xlab = "Weight(carats)",ylab = "Count",main = "Count of Weight"
facets = color ~ .,binwidth = 0.1,xlim = c(0,3))
# xlab和ylab参数设置横纵坐标的标题；main参数设置总标题；
qplot(carat,data = diamonds,geom = "histogram",
xlab = "Weight(carats)",ylab = "Count",main = "Count of Weight",
facets = color ~ .,binwidth = 0.1,xlim = c(0,3))
# log = "xy"表示对各坐标轴取对数；
qplot(carat,price,data = dsmall,log="xy")
qplot(date,unemploy/pop,data = economics,geom = "line")+geom_line(colour = I(green))
qplot(date,unemploy/pop,data = economics,geom = "line")+geom_line(colour = I("green"))
qplot(date,unemploy/pop,data = economics,geom = "line",colour = I("green"))
qplot(date,unemploy/pop,data = economics,geom = "line",colour = I("red"))
qplot(date,unemploy/pop,data = economics,geom = "line",colour = "red")
qplot(date,unemploy/pop,data = economics,geom = "line",colour = "green")
qplot(date,unemploy/pop,data = economics,geom = "line",colour = I("red"))
# facets参数——分组：
qplot(carat,data = diamonds,geom = "histogram",facets = . ~ color,binwidth = 0.1,xlim = c(0,3))
# facets参数——分组：
qplot(carat,data = diamonds,geom = "histogram",facets = color~.,binwidth = 0.1,xlim = c(0,3))
# 图层函数：geom、geom_params、stat、stat_params、data、mapping、position；
p <- p + layer(geom = bar,geom_params = list(fill = "steelblue",
stat = "bin",stat_params = list(binwidth = 1))
# 图层函数：geom、geom_params、stat、stat_params、data、mapping、position；
p <- p + layer(geom = bar,geom_params = list(fill = "steelblue"),
stat = "bin",stat_params = list(binwidth = 1))
# 图层函数：geom、geom_params、stat、stat_params、data、mapping、position；
p <- p + layer(geom = bar,geom_params = list(fill = "steelblue"),
stat = "bin",stat_params = list(binwidth = 1))
#################################################################################################
# ggplot函数：
# ggplot只是定义基本的映射，要显示出图形，还需要添加图层函数；
p <- ggplot(diamonds,aes(carats,price,color = cut))
# 图层函数：geom、geom_params、stat、stat_params、data、mapping、position；
p <- p + layer(geom = bar,geom_params = list(fill = "steelblue"),
stat = "bin",stat_params = list(binwidth = 1))
# 图层函数：geom、geom_params、stat、stat_params、data、mapping、position；
p <- p + layer(geom = "bar",geom_params = list(fill = "steelblue"),
stat = "bin",stat_params = list(binwidth = 1))
# 图层函数：geom、geom_params、stat、stat_params、data、mapping、position；
p <- p + layer(
geom = "bar",
geom_params = list(fill = "steelblue"),
stat = "bin",
stat_params = list(binwidth = 1))
?layer()
# 图层函数：geom、geom_params、stat、stat_params、data、mapping、position；
p <- ggplot(diamonds, aes(x = carat))
p <- p + layer(geom = "bar", geom_params = list(fill = "steelblue"), stat = "bin",
stat_params = list(binwidth = 2))
p <- p + layer(geom = "bar", params = list(fill = "steelblue"), stat = "bin",
stat_params = list(binwidth = 2))
p <- p + layer(geom = "bar", params = list(fill = "steelblue"), stat = "bin")
p
p <- p + layer(geom = "bar", params = list(fill = "steelblue"), stat = "bin",position = "identity")
p
p <- p + layer(geom = "bar",params=list(fill="steelblue",binwidth = 0.5),
stat = "bin",position = "identity")
p
p <- p + layer(geom = "bar",params=list(fill="steelblue",binwidth = 2),
stat = "bin",position = "identity")
p
p <- p + layer(geom = "bar",params=list(fill="steelblue",binwidth = 2,xlim =c(-2.5,7.5)),
stat = "bin",position = "identity")
p
p <- p + layer(geom = "bar",params=list(fill="steelblue",binwidth = 0.5,
p
p <- p + layer(geom = "bar",params=list(fill="steelblue",binwidth = 0.5,
p <- p + layer(geom = "bar",params=list(fill="steelblue",binwidth = 0.5,
p
p <- p + layer(geom = "bar",params=list(fill="steelblue",binwidth = 0.5,
p <- p + layer(geom = "bar",params=list(fill="steelblue",binwidth = 0.5,
p <- p + layer(geom = "bar",params=list(fill="steelblue",binwidth = 0.5),
stat = "bin",position = "identity")
p <- p + layer(geom = "bar",params=list(fill="steelblue",binwidth = 0.5),
stat = "bin",position = "identity")
p <- p + layer(geom = "bar",params=list(fill="steelblue",binwidth = 0.5),
stat = "bin",position = "identity")
p
# aes表示映射；stat = "bin"表示采用频数统计；
# 等同写法——简化写法；
p <- p + geom_histogram(fill="steelblue",binwidth = 0.5,stat = "bin",position = "identity")
p
# aes表示映射；stat = "bin"表示采用频数统计；
# 等同写法——简化写法；
p <- p + geom_histogram(fill="steelblue",binwidth = 0.5)
p
# 绘图后替换数据集；
p <- ggplot(mtcars,aes(mpg,wt,color = cvl))+geom_point()
mtcars <-  transform(mtcars,mpg = mpg^2)
p
View(mtcars)
# 绘图后替换数据集；
p <- ggplot(mtcars,aes(mpg,wt,color = cyl))+geom_point()
p
mtcars <-  transform(mtcars,mpg = mpg^2)
p %+% mtcars # 用新的mtcars替换p里面的mtcars；
oxboys
Oxboys
View(dsmall)
# group:分组参数；
p <- ggplot(dsmall,aes(carats,price,group = color))+geom_line()
p
View(dsmall)
# group:分组参数；
p <- ggplot(dsmall,aes(carat,price,group = color))+geom_line()
p
# group:分组参数；
p <- ggplot(dsmall,aes(carat,price,group = color))+geom_line(fill = color)
# group:分组参数；
p <- ggplot(dsmall,aes(carat,price,group = color))+geom_line(fill = "color")
p
View(p)
View(dsmall)
# group:分组参数；
p <- ggplot(dsmall,aes(carat,price,group = color,fill = color))+geom_line()
p
# group:分组参数；
p <- ggplot(dsmall,aes(carat,price,group = color))+geom_line(color = color)
p
# group:分组参数；
p <- ggplot(dsmall,aes(carat,price,group = color))+geom_line(color = "color")
p
# group:分组参数；
p <- ggplot(dsmall,aes(carat,price,group = color))+geom_line()
p
# group:分组参数；
p <- ggplot(dsmall,aes(carat,price,group = cyl))+geom_line()
p
View(dsmall)
# group:分组参数；
p <- ggplot(dsmall,aes(carat,price,group = cut))+geom_line()
p
# group:分组参数；
p <- ggplot(dsmall,aes(carat,price,group = cut))+geom_line()+geom_smooth(method = "lm")
p
# group:分组参数；
p <- ggplot(dsmall,aes(carat,price,group = cut))
+ geom_line()
# group:分组参数；
p <- ggplot(dsmall,aes(carat,price,group = cut)) +
geom_line() +
geom_smooth(aes(group = 1)method = "lm")
# group:分组参数；
p <- ggplot(dsmall,aes(carat,price,group = cut)) +
geom_line() +
geom_smooth(aes(group = 1),method = "lm")
p
# group:分组参数；
p <- ggplot(dsmall,aes(carat,price,group = cut)) +
geom_line(colour = "red") +
geom_smooth(aes(group = 1),method = "lm")
p
# group:分组参数；
p <- ggplot(dsmall,aes(carat,price,group = cut)) +
geom_line(colour = "green") +
geom_smooth(aes(group = 1),method = "lm")
p
# group:分组参数；
p <- ggplot(dsmall,aes(carat,price,group = cut)) +
geom_line(colour = color) +
geom_smooth(aes(group = 1),method = "lm")
# group:分组参数；
p <- ggplot(dsmall,aes(carat,price,group = cut)) +
geom_line(colour = color) +
geom_smooth(aes(group = 1),method = "lm")
View(dsmall)
# group:分组参数；
p <- ggplot(dsmall,aes(carat,price,group = cut)) +
geom_line(dsmall,colour = color) +
geom_smooth(aes(group = 1),method = "lm")
# group:分组参数；
p <- ggplot(dsmall,aes(carat,price,group = cut,colour = "red")) +
geom_line() +
geom_smooth(aes(group = 1),method = "lm")
p
# group:分组参数；
p <- ggplot(dsmall,aes(carat,price,group = cut,colour = color)) +
geom_line() +
geom_smooth(aes(group = 1),method = "lm")
p
View(dsmall)
# position参数：dodge、fill、stack、identity、jitter；
p <- ggplot(diamonds,aes(clarity,fill = cut))
p+geom_bar(position = "fill")
p+geom_bar(position = "stack")
p+geom_bar(position = "dodge")
p+geom_bar(position = "stack")
p+geom_bar(position = "stack") + scale_y_continuous(breaks = seq(0,12000,200))
p+geom_bar(position = "stack") + scale_y_continuous(breaks = seq(0,12000,2000))
p+geom_bar(position = "identity")
p+geom_bar(position = "jitter")
# ggtitle函数添加图表标题；
p+geom_bar(position = "identity")+ggtitle("geom_bar(stat="identity")")
# ggtitle函数添加图表标题；
p+geom_bar(position = "identity")+ggtitle("geom_bar(stat=\"identity\")")
# ggtitle函数添加图表标题；
p+geom_bar(position = "dodge")+ggtitle("geom_bar(stat=\"dodge\")")
# ggtitle函数添加图表标题；
p+geom_bar(stat = "dodge")+ggtitle("geom_bar(stat=\"dodge\")")
# ggtitle函数添加图表标题；
p+geom_bar(stat = "identity")+ggtitle("geom_bar(stat=\"dodge\")")
View(p)
View(dsmall)
# ggtitle函数添加图表标题；
p <- ggplot(diamonds,aes(clarity,price,fill = cut))
p+geom_bar(stat = "identity")+ggtitle("geom_bar(stat=\"dodge\")")
p+geom_bar(stat = "bin")+ggtitle("geom_bar(stat=\"bin\")")
p <- ggplot(diamonds,aes(clarity,fill = cut))
p+geom_bar(stat = "bin")+ggtitle("geom_bar(stat=\"bin\")")
View(data)
p+geom_bar(stat = "pce")+ggtitle("geom_bar(stat=\"bin\")")
p <- ggplot(diamonds,aes(pce,fill = cut))
p+geom_bar(stat = "bin")+ggtitle("geom_bar(stat=\"bin\")")
View(dsmall)
p <- ggplot(diamonds,aes(carat,fill = cut))
p+geom_bar(stat = "bin")+ggtitle("geom_bar(stat=\"bin\")")
p+geom_bar(stat = "bin",binwidth = 40)+ggtitle("geom_bar(stat=\"bin\")")
p+geom_bar(stat = "bin",binwidth = 2)+ggtitle("geom_bar(stat=\"bin\")")
p+geom_bar(stat = "bin",binwidth = 0.5)+ggtitle("geom_bar(stat=\"bin\")")
p+geom_bar(stat = "bin")+ggtitle("geom_bar(stat=\"bin\")")
# geom_area填充图；
df <- data.frame(
x = c(2,3,6),
y = c(4,6,8),
label = c("a","b","c") )
p <- ggplot(df,aes(x,y,label = label))
p+geom_area()
p + geom_path()
p + geom_tile()
p + polygon()
p + geom_polygon()
# group:分组参数；
p <- ggplot(dsmall,aes(carat,price,group = cut,colour = color)) +
geom_line() +
geom_smooth(aes(group = 1),method = "lm")
p
# 分组函数：facet_grid();
p <- ggplot(diamonds,aes(depth)) + xlim(58,68)
p + geom_histogram(aes(y = ..density..),binwidth = 0.1) + facet_grid(cut~.)
rm(list = ls())
setwd("/Users/xufeng/Desktop/lvhong")
library(ggplot2)
a <- read.csv(file = "对比(1).csv",header = F)
ab <- a[,1:7]
ab <- ab[,c(1,5,6)]
colnames(ab) <- c("ID","Up","Down")
ab <- ab[-1,]
bba <- a[,8:14]
bba <- bba[,c(1,5,6)]
colnames(bba) <- c("ID","Up","Down")
bba <- bba[-1,]
f <- a[,15:21]
f <- f[,c(1,5,6)]
colnames(f) <- c("ID","Up","Down")
f <- f[-1,]
ab <- ab[c(-74,-75),]
bba <- bba[c(-73,-74,-75),]
rownames(ab) <- ab[,1]
rownames(bba) <- bba[,1]
rownames(f) <- f[,1]
ab <- ab[intersect(intersect(ab$ID,bba$ID),f$ID),]
bba <- bba[intersect(intersect(ab$ID,bba$ID),f$ID),]
f <- f[intersect(intersect(ab$ID,bba$ID),f$ID),]
View(a)
View(ab)
# 绘制GO结果条形图——表现出Up和Down的比例关系；
setwd("/Users/xufeng/Desktop/others/Kluyveromyces/countdata2")
rm(list = ls())
library(tidyr)
k_f_GO_all <- read.csv(file = "k_f_all_up+down_GO.csv",header = T)
View(k_f_GO_all)
k_f_GO_all <- k_f_GO_all[order(-k_f_GO_all$p.adjust),]
a <- k_f_GO_all[,c("Description","Down","Up")]
View(a)
b$Description <- factor(b$Description, levels=a$Description, ordered=TRUE)
b <- gather(a,Regulate,Count,-Description)
b$Description <- factor(b$Description, levels=a$Description, ordered=TRUE)
View(b)
load("/Users/xufeng/Desktop/k_f_Sce/酿酒酵母和克鲁维酵母/all_fpkm.Rdata")
View(all_fpkm)
load("/Users/xufeng/Desktop/k_f_Sce/酿酒酵母和克鲁维酵母/k_f_fpkm.Rdata")
View(k_f_fpkm)
# SCbatch；
rm(list = ls())
install.packages(devtools)
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
devtools::install_github('tengfei-emory/scBatch')
library(scBatch)
install.packages("digest")
install.packages("digest")
devtools::install_github('tengfei-emory/scBatch')
